* Jeeson
A json parsing library. Nothing special really. Got a json file you want to use in your program
and your program is written in C? Well then give this one a go.

* Resource
The [[https://www.json.org/][json specification]] was the only needed resource to get an implementation up and running.
It is short and concise, having excellent graph visualization to fully grasp the format.
Easily a 10/10 as far as format grammar documentation goes.

* Instructions
Building the project requires [[https://command-not-found.com/cmake][cmake]]. It is desirable to create a build directory to have a cleaner file tree.
My personal choice is almost always =bin=.
#+begin_src shell
  mkdir bin
  cd bin
  cmake ..
  make
#+end_src

* Parser features [6/8]
- [X] objects
- [X] arrays
- [X] string
- [X] number
- [X] array
- [X] boolean
- [ ] escape characters and unicode
- [ ] null

* Documentation
To load a json file into your program and then print it.
#+begin_src c
  struct json_object_t *object=json_to_object(args[1]);
  printf_object(*object, 0);
#+end_src

To check if a json object contains a key. =has_key= returns the index of the key that can then be used to index into the internal key structure.
#+begin_src c
  struct json_object_t *object=json_to_object(args[1]);
  char *key_to_look_for = "mama";
  ssize_t idx = has_key(object, mama);
  printf("index: %d\n", idx);
#+end_src
